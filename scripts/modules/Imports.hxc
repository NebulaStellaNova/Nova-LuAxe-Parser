import funkin.modding.module.Module;

import Std;
import Math;
import Main;
import StringTools;
import haxe.Json;
import openfl.utils.Assets;
import lime.app.Application;
import flixel.FlxG;
import flixel.FlxSprite;
import flixel.FlxBasic;
import flixel.FlxCamera;
import flixel.tweens.FlxEase;
import flixel.sound.FlxSound;
import flixel.system.FlxAssets;
import flixel.math.FlxMath;
import flixel.addons.text.FlxTypeText;
import flixel.text.FlxText;
import flixel.util.FlxTimer;
import funkin.play.PlayState;
import funkin.play.components.HealthIcon;
import funkin.Conductor;
import funkin.graphics.FunkinSprite;
import flixel.tweens.FlxTween;

//
import funkin.ui.MusicBeatState;

import haxe.ui.RuntimeComponentBuilder;

import haxe.ui.core.Screen;
import haxe.ui.core.Component;
import haxe.ui.core.TextDisplay;

import haxe.ui.components.Label;
import haxe.ui.components.Button;
import haxe.ui.components.TabBar;
import haxe.ui.components.Column;
import haxe.ui.components.DropDown;
import haxe.ui.components.TextArea;
import haxe.ui.components.CheckBox;
import haxe.ui.components.TextField;
import haxe.ui.components.NumberStepper;

import haxe.ui.containers.Box;
import haxe.ui.containers.HBox;
import haxe.ui.containers.VBox;
import haxe.ui.containers.Header;
import haxe.ui.containers.TabView;
import haxe.ui.containers.ListView;
import haxe.ui.containers.TableView;
import haxe.ui.containers.ScrollView;
import haxe.ui.containers.HorizontalSplitter;

import haxe.ui.containers.menus.Menu;
import haxe.ui.containers.menus.MenuBar;
import haxe.ui.containers.menus.MenuItem;
import haxe.ui.containers.menus.MenuCheckBox;
import haxe.ui.containers.menus.MenuOptionBox;
import haxe.ui.containers.menus.MenuSeparator;

import haxe.ui.containers.dialogs.Dialog;

import haxe.ui.containers.windows.Window;
import haxe.ui.containers.windows.WindowManager;

import haxe.ui.data.ArrayDataSource;

import haxe.ui.macros.ComponentMacros;

import funkin.input.Cursor;

import funkin.util.FileUtil;
import funkin.util.ReflectUtil;

import haxe.Unserializer;

import funkin.modding.PolymodHandler;
import funkin.modding.module.ModuleHandler;

class LuaImports extends Module {

    public function new() {
        super('LuaImports');
    }

    public function getImports() {
        return [
			// Haxe related stuff
			"Std"			   => Std,
			"Math"			  => Math,
			//"Reflect"			  => Reflect,
			"StringTools"	   => StringTools,
			"Json"			  => Json,

			// OpenFL & Lime related stuff
			"Assets"			=> Assets,
			"Application"	   => Application,
			"Main"				=> Main,
			"window"			=> Application.current.window,

			// Flixel related stuff
			"FlxG"			  => FlxG,
			"FlxSprite"		 => FlxSprite,
			"FlxBasic"		  => FlxBasic,
			"FlxCamera"		 => FlxCamera,
			"state"			 => FlxG.state,
			"FlxEase"		   => FlxEase,
			"FlxTween"		  => FlxTween,
			"FlxSound"		  => FlxSound,
			"FlxAssets"		 => FlxAssets,
			"FlxMath"		   => FlxMath,
			// "FlxGroup"		  => FlxGroup,
			// "FlxSpriteGroup"	=> FlxSpriteGroup,
			"FlxTypeText"	   => FlxTypeText,
			"FlxText"		   => FlxText,
			"FlxTimer"		  => FlxTimer,
			"PlayState"		 => PlayState,
			"HealthIcon"		=> HealthIcon,
			"Paths"			 => Paths,
			"Conductor"		 => Conductor,
			"FunkinSprite"		=> FunkinSprite,

            // -- Haxe UI -- \\
            "MusicBeatState" => MusicBeatState,
            "Screen" => Screen,
            "Component" => Component,
            "TextDisplay" => TextDisplay,
            "Label" => Label,
            "Button" => Button,
            "TabBar" => TabBar,
            "Column" => Column,
            "DropDown" => DropDown,
            "TextArea" => TextArea,
            "CheckBox" => CheckBox,
            "TextField" => TextField,
            "NumberStepper" => NumberStepper,
            "Box" => Box,
            "HBox" => HBox,
            "VBox" => VBox,
            "Header" => Header,
            "TabView" => TabView,
            "ListView" => ListView,
            "TableView" => TableView,
            "ScrollView" => ScrollView
            "HorizontalSplitter" => HorizontalSplitter,
            "Menu" => Menu,
            "MenuBar" => MenuBar,
            "MenuItem" => MenuItem,
            "MenuCheckBox" => MenuCheckBox,
            "MenuOptionBox" => MenuOptionBox,
            "MenuSeparator" => MenuSeparator,
            "Window" => Window,
            "WindowManager" => WindowManager,
            "windowManager" => new WindowManager(),
            "ArrayDataSource" => ArrayDataSource,
            "Cursor" => Cursor,

            // -- Utils -- \\
            "FileUtil" => FileUtil,
            "ReflectUtil" => ReflectUtil, // Fallback

            // -- Serial -- \\
            "Reflect" => Unserializer.DEFAULT_RESOLVER.resolveClass('Reflect'),
            "Polymod" => Unserializer.DEFAULT_RESOLVER.resolveClass('polymod.Polymod'),

            "PolymodHandler" => PolymodHandler,
            "ModuleHandler" => ModuleHandler
		];
    }
}